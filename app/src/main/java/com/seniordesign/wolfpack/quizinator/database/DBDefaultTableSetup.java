package com.seniordesign.wolfpack.quizinator.database;

import android.database.sqlite.SQLiteDatabase;

import com.google.gson.Gson;
import com.seniordesign.wolfpack.quizinator.Constants;

class DBDefaultTableSetup {

    static void setupDefaultTables(SQLiteDatabase db){
        setDefaultCardSet(db);
        setDefaultDeckSet(db);
        setDefaultCdRelationSet(db);
    }

    private static void setDefaultCardSet(SQLiteDatabase db) {
        Gson gson = new Gson();

        final String[] TRUE_FALSE_ANSWERS = new String[]{String.valueOf(true), String.valueOf(false)};

        StringBuilder queryBuilder = new StringBuilder()
                .append("insert into " + QuizSQLiteHelper.TABLE_CARDS)

                //Multiple Choice
                .append(" SELECT \'" + "1" + "\' AS \'" + QuizSQLiteHelper.CARD_COLUMN_ID + "\',")
                .append("\'").append(Constants.CARD_TYPES.MULTIPLE_CHOICE.ordinal()).append("\' AS \'").append(QuizSQLiteHelper.CARD_COLUMN_CARDTYPE).append("\', ")
                .append("\'").append("1+1 = ?").append("\' AS \'").append(QuizSQLiteHelper.CARD_COLUMN_QUESTION).append("\',")
                .append("\'").append("2").append("\' AS \'").append(QuizSQLiteHelper.CARD_COLUMN_CORRECTANSWER).append("\',")
                .append("\'").append(gson.toJson(new String[]{"2", "1", "4", "3"})).append("\' AS \'").append(QuizSQLiteHelper.CARD_COLUMN_POSSIBLEANSWERS).append("\',")
                .append("\'").append("1").append("\' AS \'").append(QuizSQLiteHelper.CARD_COLUMN_POINTS).append("\',")
                .append("\'").append(false).append("\' AS \'").append(QuizSQLiteHelper.CARD_COLUMN_MODERATORNEEDED).append("\' ")
                .append("UNION ALL SELECT \'" + "2" + "\',")
                .append("\'").append(Constants.CARD_TYPES.MULTIPLE_CHOICE.ordinal()).append("\', ")
                .append("\'").append("What is the symbol for Iron?").append("\', ")
                .append("\'").append("Fe").append("\', ")
                .append("\'").append(gson.toJson(new String[]{"Fe", "Ir", "I", "C"})).append("\', ")
                .append("\'").append("1").append("\', ")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "3" + "\',")
                .append("\'").append(Constants.CARD_TYPES.MULTIPLE_CHOICE.ordinal()).append("\',")
                .append("\'").append("Who was the 2nd president of the US?").append("\',")
                .append("\'").append("John Adams").append("\',")
                .append("\'").append(gson.toJson(new String[]{"George Washington", "Thomas Jefferson", "Abraham Lincoln", "John Adams"})).append("\',")
                .append("\'").append("1").append("\',")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "4" + "\',")
                .append("\'").append(Constants.CARD_TYPES.MULTIPLE_CHOICE.ordinal()).append("\',")
                .append("\'").append("What restaurant chain has the Golden Arches?").append("\',")
                .append("\'").append("McDonalds").append("\',")
                .append("\'").append(gson.toJson(new String[]{"McDonalds", "Wendys", "Subway", "Burger King"})).append("\',")
                .append("\'").append("1").append("\',")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "5" + "\',")
                .append("\'").append(Constants.CARD_TYPES.MULTIPLE_CHOICE.ordinal()).append("\',")
                .append("\'").append("Which of the following is a coastal state?").append("\',")
                .append("\'").append("Maine").append("\',")
                .append("\'").append(gson.toJson(new String[]{"Maine", "Wisconsin", "Idaho", "Tennessee"})).append("\',")
                .append("\'").append("1").append("\',")
                .append("\'").append(false).append("\' ")

                //True False
                .append("UNION ALL SELECT \'" + "6" + "\', " + "\'")
                .append(Constants.CARD_TYPES.TRUE_FALSE.ordinal()).append("\', ")
                .append("\'1*2 = 0\', ")
                .append("\'").append(false).append("\', ")
                .append("\'").append(gson.toJson(TRUE_FALSE_ANSWERS)).append("\', ")
                .append("\'1\', ")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "7" + "\', " + "\'")
                .append(Constants.CARD_TYPES.TRUE_FALSE.ordinal()).append("\', ")
                .append("\'4*5 = 20\', ")
                .append("\'").append(true).append("\', ")
                .append("\'").append(gson.toJson(TRUE_FALSE_ANSWERS)).append("\', ")
                .append("\'1\', ")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "8" + "\', " + "\'")
                .append(Constants.CARD_TYPES.TRUE_FALSE.ordinal()).append("\', ")
                .append("\'20*10 = 100\', ")
                .append("\'").append(false).append("\', ")
                .append("\'").append(gson.toJson(TRUE_FALSE_ANSWERS)).append("\', ")
                .append("\'1\', ")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "9" + "\', " + "\'")
                .append(Constants.CARD_TYPES.TRUE_FALSE.ordinal()).append("\', ")
                .append("\'10*91 = 901\', ")
                .append("\'").append(false).append("\', ")
                .append("\'").append(gson.toJson(TRUE_FALSE_ANSWERS)).append("\', ")
                .append("\'1\', ")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "10" + "\', " + "\'")
                .append(Constants.CARD_TYPES.TRUE_FALSE.ordinal()).append("\', ")
                .append("\'100^2 = 10000\', ")
                .append("\'").append(true).append("\', ")
                .append("\'").append(gson.toJson(TRUE_FALSE_ANSWERS)).append("\', ")
                .append("\'1\', ")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "11" + "\', " + "\'")
                .append(Constants.CARD_TYPES.TRUE_FALSE.ordinal()).append("\', ")
                .append("\'10*102 = 1002\', ")
                .append("\'").append(false).append("\', ")
                .append("\'").append(gson.toJson(TRUE_FALSE_ANSWERS)).append("\', ")
                .append("\'1\', ")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "12" + "\', " + "\'")
                .append(Constants.CARD_TYPES.TRUE_FALSE.ordinal()).append("\', ")
                .append("\'8/2 = 4\', ")
                .append("\'").append(true).append("\', ")
                .append("\'").append(gson.toJson(TRUE_FALSE_ANSWERS)).append("\', ")
                .append("\'1\', ")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "13" + "\', " + "\'")
                .append(Constants.CARD_TYPES.TRUE_FALSE.ordinal()).append("\', ")
                .append("\'120/4 = 30\', ")
                .append("\'").append(true).append("\', ")
                .append("\'").append(gson.toJson(TRUE_FALSE_ANSWERS)).append("\', ")
                .append("\'1\', ")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "14" + "\', " + "\'")
                .append(Constants.CARD_TYPES.TRUE_FALSE.ordinal()).append("\', ")
                .append("\'6*7 = 41\', ")
                .append("\'").append(false).append("\', ")
                .append("\'").append(gson.toJson(TRUE_FALSE_ANSWERS)).append("\', ")
                .append("\'1\', ")
                .append("\'").append(false).append("\' ")
                .append("UNION ALL SELECT \'" + "15" + "\', " + "\'")
                .append(Constants.CARD_TYPES.TRUE_FALSE.ordinal()).append("\', ")
                .append("\'Does MSOE stand for Milwaukee School of Engineering?\', ")
                .append("\'").append(true).append("\', ")
                .append("\'").append(gson.toJson(TRUE_FALSE_ANSWERS)).append("\', ")
                .append("\'1\', ")
                .append("\'").append(false).append("\' ")

                //Free Response
                .append("UNION ALL SELECT \'" + "16" + "\', " + "\'")
                .append(Constants.CARD_TYPES.FREE_RESPONSE.ordinal()).append("\', ")
                .append("\'Mass * Acceleration = ?\', ")
                .append("\'").append("Force").append("\', ")
                .append("\'").append("" /* Look at Answer field */).append("\', ")
                .append("\'1\', ")
                .append("\'").append(true).append("\' ")
                .append("UNION ALL SELECT \'" + "17" + "\', " + "\'")
                .append(Constants.CARD_TYPES.FREE_RESPONSE.ordinal()).append("\', ")
                .append("\'What mathematical property says (a + b) + c = a + (b + c)?\', ")
                .append("\'").append("Associative Property").append("\', ")
                .append("\'").append("" /* Look at Answer field */).append("\', ")
                .append("\'1\', ")
                .append("\'").append(true).append("\' ")
                .append("UNION ALL SELECT \'" + "18" + "\', " + "\'")
                .append(Constants.CARD_TYPES.FREE_RESPONSE.ordinal()).append("\', ")
                .append("\'What is the abbreviation for Tyrannosaurus?\', ")
                .append("\'").append("T-Rex").append("\', ")
                .append("\'").append("" /* Look at Answer field */).append("\', ")
                .append("\'1\', ")
                .append("\'").append(true).append("\' ")
                .append("UNION ALL SELECT \'" + "19" + "\', " + "\'")
                .append(Constants.CARD_TYPES.FREE_RESPONSE.ordinal()).append("\', ")
                .append("\'Which color has the longest wavelength in the color spectrum?\', ")
                .append("\'").append("Red").append("\', ")
                .append("\'").append("" /* Look at Answer field */).append("\', ")
                .append("\'1\', ")
                .append("\'").append(true).append("\' ")
                .append("UNION ALL SELECT \'" + "20" + "\', " + "\'")
                .append(Constants.CARD_TYPES.FREE_RESPONSE.ordinal()).append("\', ")
                .append("\'How many members are in the Senate?\', ")
                .append("\'").append("100").append("\', ")
                .append("\'").append("" /* Look at Answer field */).append("\', ")
                .append("\'1\', ")
                .append("\'").append(true).append("\' ")

                //Verbal Response
                .append("UNION ALL SELECT \'" + "21" + "\', " + "\'")
                .append(Constants.CARD_TYPES.VERBAL_RESPONSE.ordinal()).append("\', ")
                .append("\'What is the first right in the Bill of Rights?\', ")
                .append("\'").append("Freedom of Speech, Freedom of Religion, Freedom of Assembly").append("\', ")
                .append("\'").append("" /* Look at Answer field */).append("\', ")
                .append("\'1\', ")
                .append("\'").append(true).append("\' ")
                .append("UNION ALL SELECT \'" + "22" + "\', " + "\'")
                .append(Constants.CARD_TYPES.VERBAL_RESPONSE.ordinal()).append("\', ")
                .append("\'Name one of the three astronauts that were on Apollo 11?\', ")
                .append("\'").append("Neil Armstrong, Edwin \"Buzz\" Aldrin, or Michael Collins").append("\', ")
                .append("\'").append("" /* Look at Answer field */).append("\', ")
                .append("\'1\', ")
                .append("\'").append(true).append("\' ")
                .append("UNION ALL SELECT \'" + "23" + "\', " + "\'")
                .append(Constants.CARD_TYPES.VERBAL_RESPONSE.ordinal()).append("\', ")
                .append("\'What are the three branches of the United States government?\', ")
                .append("\'").append("Legislative, Judicial, and Executive").append("\', ")
                .append("\'").append("" /* Look at Answer field */).append("\', ")
                .append("\'1\', ")
                .append("\'").append(true).append("\' ")
                .append("UNION ALL SELECT \'" + "24" + "\', " + "\'")
                .append(Constants.CARD_TYPES.VERBAL_RESPONSE.ordinal()).append("\', ")
                .append("\'Name all seven continents.\', ")
                .append("\'").append("North America, South America, Africa, Europe, Asia, and Antarctica").append("\', ")
                .append("\'").append("" /* Look at Answer field */).append("\', ")
                .append("\'1\', ")
                .append("\'").append(true).append("\' ")
                .append("UNION ALL SELECT \'" + "25" + "\', " + "\'")
                .append(Constants.CARD_TYPES.VERBAL_RESPONSE.ordinal()).append("\', ")
                .append("\'Give an example of Classical conditioning (aka. Pavlovian or Respondent conditioning) at work.\', ")
                .append("\'").append("Having a person or animal elicit a response from a neutral stimulus through repeated negative or positive re-enforcement.").append("\', ")
                .append("\'").append("" /* Look at Answer field */).append("\', ")
                .append("\'1\', ")
                .append("\'").append(true).append("\';")
                ;
        db.execSQL(queryBuilder.toString());
    }

    private static void setDefaultDeckSet(SQLiteDatabase db) {
        StringBuilder queryBuilder = new StringBuilder()
                .append("insert into " + QuizSQLiteHelper.TABLE_DECKS)
                .append(" SELECT \'" + "1" + "\' AS \'" + QuizSQLiteHelper.DECK_COLUMN_ID + "\',")
                .append("\'").append("Default").append("\' AS \'").append(QuizSQLiteHelper.DECK_COLUMN_DECKNAME).append("\',")
                .append("\'").append("General").append("\' AS \'").append(QuizSQLiteHelper.DECK_COLUMN_CATEGORY).append("\',")
                .append("\'").append("General").append("\' AS \'").append(QuizSQLiteHelper.DECK_COLUMN_SUBJECT).append("\',")
                .append("\'").append(true).append("\' AS \'").append(QuizSQLiteHelper.DECK_COLUMN_DUPLICATECARDS).append("\',")
                .append("\'").append("Team Wolfpack").append("\' AS \'").append(QuizSQLiteHelper.DECK_COLUMN_OWNER).append("\';");
        db.execSQL(queryBuilder.toString());
    }

    private static void setDefaultCdRelationSet(SQLiteDatabase db) {
        StringBuilder queryBuilder = new StringBuilder()
                .append("insert into " + QuizSQLiteHelper.TABLE_CDRELATIONS)
                .append(" SELECT \'1\' AS \'" + QuizSQLiteHelper.CDRELATIONS_COLUMN_ID + "\', ")
                .append("\'1\' AS \'" + QuizSQLiteHelper.CDRELATIONS_COLUMN_FKCARD + "\', ")
                .append("\'1\' AS \'" + QuizSQLiteHelper.CDRELATIONS_COLUMN_FKDECK + "\' ")
                .append(" UNION ALL SELECT \'2\', ")
                .append("\'2\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'3\', ")
                .append("\'3\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'4\', ")
                .append("\'4\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'5\', ")
                .append("\'5\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'6\', ")
                .append("\'6\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'7\', ")
                .append("\'7\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'8\', ")
                .append("\'8\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'9\', ")
                .append("\'9\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'10\', ")
                .append("\'10\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'11\', ")
                .append("\'11\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'12\', ")
                .append("\'12\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'13\', ")
                .append("\'13\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'14\', ")
                .append("\'14\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'15\', ")
                .append("\'15\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'16\', ")
                .append("\'16\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'17\', ")
                .append("\'17\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'18\', ")
                .append("\'18\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'19\', ")
                .append("\'19\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'20\', ")
                .append("\'20\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'21\', ")
                .append("\'21\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'22\', ")
                .append("\'22\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'23\', ")
                .append("\'23\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'24\', ")
                .append("\'24\', ")
                .append("\'1\' ")
                .append(" UNION ALL SELECT \'25\', ")
                .append("\'25\', ")
                .append("\'1\';");

        db.execSQL(queryBuilder.toString());
    }
}
